
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class Codifier extends javax.swing.JFrame {
    FunctionCodifier FC = new FunctionCodifier();
    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
    File F;
    public Codifier() {
        initComponents();
    }    
    public void ToClipboard(){
        String str = Result();
        StringSelection strSel = new StringSelection(str);        
        cb.setContents(strSel, null);
    }
    public String ToResult(){ 
        Transferable t = cb.getContents(this);
        DataFlavor dataFlavorStringJava;
        try {
            dataFlavorStringJava = new DataFlavor("application/x-java-serialized-object; class=java.lang.String");
            if (t.isDataFlavorSupported(dataFlavorStringJava)) {
            String texto;
                try {
                    texto = (String) t.getTransferData(dataFlavorStringJava);
                    return texto;
                } catch (UnsupportedFlavorException ex) {
                    Logger.getLogger(Codifier.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Codifier.class.getName()).log(Level.SEVERE, null, ex);
                }            
         }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Codifier.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "";
    }
    public void Function(int X){
        String[] lineas;
        lineas = Text.getText().split("\n");
        Result.setText("");
        for( int x = 0; x < lineas.length; x++){
            Result.append(FC.CoDe(X, lineas[x]) + "\n");
        }
        ToClipboard();
    }
    public String Result(){
        String[] lineas;
        lineas = Result.getText().split("\n");
        String X = "";
        for( int x = 0; x < lineas.length; x++){
            X = X + lineas[x] + "\n";
        }
        return X;
    }
    public void Read(String X, int V){
        try
        {            
            FileInputStream fstream = new FileInputStream(X);
            DataInputStream entrada = new DataInputStream(fstream);
            BufferedReader buffer = new BufferedReader(new InputStreamReader(entrada));
            String strLinea;
            Text.setText("");
            while ((strLinea = buffer.readLine()) != null)   {
                Text.append(strLinea + "\n");
            }
            entrada.close();
        }catch (Exception e){
            System.err.println("Ocurrio un error: " + e.getMessage());
        }
        Function(V);
    }
    public void Save(File T){
        try {
            File X = new File(T.getAbsolutePath() + ".code");
            if (!X.exists())
                    X.createNewFile();
            FileWriter FW = new FileWriter(X.getAbsoluteFile());
            BufferedWriter BW = new BufferedWriter(FW);
            BW.write(Result());
            BW.close();
            FW.close();
        } catch (IOException ex) {
            Logger.getLogger(Codifier.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileOpen = new javax.swing.JFrame();
        OpenFile = new javax.swing.JFileChooser();
        FileSave = new javax.swing.JFrame();
        SaveFile = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        Result = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        Text = new javax.swing.JTextArea();
        Code = new javax.swing.JButton();
        Decode = new javax.swing.JButton();
        Paste = new javax.swing.JButton();
        MoreOptions = new javax.swing.JPanel();
        Less = new javax.swing.JButton();
        Value = new javax.swing.JTextField();
        setValue = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileM = new javax.swing.JMenu();
        MOpen = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        EditM = new javax.swing.JMenu();
        MCode = new javax.swing.JMenuItem();
        MDecode = new javax.swing.JMenuItem();
        MPaste = new javax.swing.JMenuItem();
        WindowM = new javax.swing.JMenu();
        MMore = new javax.swing.JMenuItem();
        MCredits = new javax.swing.JMenuItem();
        MExit = new javax.swing.JMenuItem();

        FileOpen.setTitle("Abrir Archivo");
        FileOpen.setMaximumSize(new java.awt.Dimension(542, 377));
        FileOpen.setMinimumSize(new java.awt.Dimension(542, 377));
        FileOpen.setPreferredSize(new java.awt.Dimension(542, 377));
        FileOpen.setResizable(false);

        OpenFile.setApproveButtonText("Abrir");
        OpenFile.setApproveButtonToolTipText("");
        OpenFile.setCurrentDirectory(new java.io.File("C:\\Users\\Ivan Vasquez\\Desktop"));
        OpenFile.setDialogTitle("Abrir Archivo");
        OpenFile.setMaximumSize(new java.awt.Dimension(425, 245));
        OpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FileOpenLayout = new javax.swing.GroupLayout(FileOpen.getContentPane());
        FileOpen.getContentPane().setLayout(FileOpenLayout);
        FileOpenLayout.setHorizontalGroup(
            FileOpenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FileOpenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FileOpenLayout.setVerticalGroup(
            FileOpenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FileOpenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        FileSave.setTitle("Guardar Archivo");
        FileSave.setMaximumSize(new java.awt.Dimension(542, 377));
        FileSave.setMinimumSize(new java.awt.Dimension(542, 377));
        FileSave.setPreferredSize(new java.awt.Dimension(542, 377));
        FileSave.setResizable(false);

        SaveFile.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        SaveFile.setApproveButtonText("Guardar");
        SaveFile.setApproveButtonToolTipText("");
        SaveFile.setCurrentDirectory(new java.io.File("C:\\Users\\Ivan Vasquez\\Desktop"));
        SaveFile.setDialogTitle("Guardar Archivo");
        SaveFile.setMaximumSize(new java.awt.Dimension(425, 245));
        SaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FileSaveLayout = new javax.swing.GroupLayout(FileSave.getContentPane());
        FileSave.getContentPane().setLayout(FileSaveLayout);
        FileSaveLayout.setHorizontalGroup(
            FileSaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FileSaveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SaveFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FileSaveLayout.setVerticalGroup(
            FileSaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FileSaveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SaveFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Codificador de Texto V2.0");
        setMaximumSize(new java.awt.Dimension(639, 290));
        setMinimumSize(new java.awt.Dimension(639, 290));
        setPreferredSize(new java.awt.Dimension(639, 290));
        setResizable(false);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        Result.setBackground(new java.awt.Color(51, 51, 51));
        Result.setColumns(20);
        Result.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Result.setLineWrap(true);
        Result.setRows(5);
        Result.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        Result.setEnabled(false);
        jScrollPane1.setViewportView(Result);

        Text.setBackground(new java.awt.Color(204, 204, 204));
        Text.setColumns(20);
        Text.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Text.setRows(5);
        Text.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Text.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        Text.setSelectionColor(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(Text);

        Code.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Code.setText("Codificar");
        Code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodeActionPerformed(evt);
            }
        });

        Decode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Decode.setText("Decodificar");
        Decode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecodeActionPerformed(evt);
            }
        });

        Paste.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Paste.setText("Pegar");
        Paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteActionPerformed(evt);
            }
        });

        MoreOptions.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));
        MoreOptions.setMaximumSize(new java.awt.Dimension(108, 176));
        MoreOptions.setMinimumSize(new java.awt.Dimension(108, 176));

        Less.setText("Ocultar");
        Less.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LessActionPerformed(evt);
            }
        });

        Value.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Value.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Value.setText("10");

        setValue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        setValue.setText("Establecer Valor");
        setValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setValueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MoreOptionsLayout = new javax.swing.GroupLayout(MoreOptions);
        MoreOptions.setLayout(MoreOptionsLayout);
        MoreOptionsLayout.setHorizontalGroup(
            MoreOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoreOptionsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Less)
                .addGap(19, 19, 19))
            .addGroup(MoreOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Value, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(setValue, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MoreOptionsLayout.setVerticalGroup(
            MoreOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoreOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MoreOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Value)
                    .addComponent(setValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(61, 61, 61)
                .addComponent(Less)
                .addContainerGap())
        );

        MoreOptions.setVisible(false);

        FileM.setText("Archivo");

        MOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        MOpen.setText("Abrir");
        MOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MOpenActionPerformed(evt);
            }
        });
        FileM.add(MOpen);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Guardar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        FileM.add(jMenuItem1);

        jMenuBar1.add(FileM);

        EditM.setText("Editar");

        MCode.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        MCode.setText("Codificar");
        MCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MCodeActionPerformed(evt);
            }
        });
        EditM.add(MCode);

        MDecode.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        MDecode.setText("Decodificar");
        MDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MDecodeActionPerformed(evt);
            }
        });
        EditM.add(MDecode);

        MPaste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK));
        MPaste.setText("Pegar");
        MPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MPasteActionPerformed(evt);
            }
        });
        EditM.add(MPaste);

        jMenuBar1.add(EditM);

        WindowM.setText("Ventana");

        MMore.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        MMore.setText("Opciones");
        MMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMoreActionPerformed(evt);
            }
        });
        WindowM.add(MMore);

        MCredits.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        MCredits.setText("Créditos");
        MCredits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MCreditsActionPerformed(evt);
            }
        });
        WindowM.add(MCredits);

        MExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        MExit.setText("Salir");
        MExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MExitActionPerformed(evt);
            }
        });
        WindowM.add(MExit);

        jMenuBar1.add(WindowM);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MoreOptions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(Code, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Paste, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(Decode, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Code, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(Paste, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Decode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoreOptions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodeActionPerformed
        Function(1);
    }//GEN-LAST:event_CodeActionPerformed

    private void DecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecodeActionPerformed
       Function(2);
    }//GEN-LAST:event_DecodeActionPerformed

    private void setValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setValueActionPerformed
        try{FC.setValue(Integer.parseInt(Value.getText()));}
        catch(Exception E){JOptionPane.showMessageDialog(this, "Elija un valor correcto (número entero)", "Error", JOptionPane.ERROR_MESSAGE);}
    }//GEN-LAST:event_setValueActionPerformed

    private void PasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteActionPerformed
        Text.setText(ToResult());
    }//GEN-LAST:event_PasteActionPerformed

    private void LessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LessActionPerformed
        MoreOptions.setVisible(false);
        this.setSize(639, 290);
    }//GEN-LAST:event_LessActionPerformed

    private void MDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MDecodeActionPerformed
        Function(2);
    }//GEN-LAST:event_MDecodeActionPerformed

    private void MExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_MExitActionPerformed

    private void MCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MCodeActionPerformed
        Function(1);
    }//GEN-LAST:event_MCodeActionPerformed

    private void MPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MPasteActionPerformed
        Text.setText(ToResult());
    }//GEN-LAST:event_MPasteActionPerformed

    private void MCreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MCreditsActionPerformed
        JOptionPane.showMessageDialog(this, "Programa diseñado y desarrollado por Ivan Vasquez", "Créditos", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_MCreditsActionPerformed

    private void MMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMoreActionPerformed
        if(MoreOptions.isVisible()){
            MoreOptions.setVisible(false);
            this.setSize(639, 290);
        }
        else{
            MoreOptions.setVisible(true);
            this.setSize(639, 472);
        }
    }//GEN-LAST:event_MMoreActionPerformed

    private void OpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileActionPerformed
        try{
            F = OpenFile.getSelectedFile();
            int X = JOptionPane.showConfirmDialog(this, "¿Desea Decodificar el código? (Si responde NO se codificará)", "Codificar o Decodificar", JOptionPane.YES_NO_OPTION);
            Read(F.getAbsolutePath(), X++);
        }
        catch(Exception e){JOptionPane.showMessageDialog(this, "Elija un Archivo", "Error", JOptionPane.ERROR_MESSAGE);}
            FileOpen.setVisible(false);
    }//GEN-LAST:event_OpenFileActionPerformed

    private void MOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MOpenActionPerformed
        FileOpen.setVisible(true);
        FileOpen.setLocationRelativeTo(null);
    }//GEN-LAST:event_MOpenActionPerformed

    private void SaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveFileActionPerformed
        try{
            F = SaveFile.getSelectedFile();
            Save(F);
        }
        catch(Exception e){JOptionPane.showMessageDialog(this, "Elija un nombre para su archivo", "Error", JOptionPane.ERROR_MESSAGE);}
        FileSave.setVisible(false);
    }//GEN-LAST:event_SaveFileActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        FileSave.setVisible(true);
        FileSave.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Codifier C = new Codifier();
                C.setVisible(true);
                C.setLocationRelativeTo(null);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Code;
    private javax.swing.JButton Decode;
    private javax.swing.JMenu EditM;
    private javax.swing.JMenu FileM;
    private javax.swing.JFrame FileOpen;
    private javax.swing.JFrame FileSave;
    private javax.swing.JButton Less;
    private javax.swing.JMenuItem MCode;
    private javax.swing.JMenuItem MCredits;
    private javax.swing.JMenuItem MDecode;
    private javax.swing.JMenuItem MExit;
    private javax.swing.JMenuItem MMore;
    private javax.swing.JMenuItem MOpen;
    private javax.swing.JMenuItem MPaste;
    private javax.swing.JPanel MoreOptions;
    private javax.swing.JFileChooser OpenFile;
    private javax.swing.JButton Paste;
    private javax.swing.JTextArea Result;
    private javax.swing.JFileChooser SaveFile;
    private javax.swing.JTextArea Text;
    private javax.swing.JTextField Value;
    private javax.swing.JMenu WindowM;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton setValue;
    // End of variables declaration//GEN-END:variables
}
